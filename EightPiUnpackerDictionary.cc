//
// File generated by rootcint at Fri May 23 14:55:10 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME EightPiUnpackerDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EightPiUnpackerDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Ulm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Ulm(void *p = 0);
   static void *newArray_Ulm(Long_t size, void *p);
   static void delete_Ulm(void *p);
   static void deleteArray_Ulm(void *p);
   static void destruct_Ulm(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Ulm*)
   {
      ::Ulm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Ulm >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Ulm", ::Ulm::Class_Version(), "./Event.hh", 12,
                  typeid(::Ulm), DefineBehavior(ptr, ptr),
                  &::Ulm::Dictionary, isa_proxy, 4,
                  sizeof(::Ulm) );
      instance.SetNew(&new_Ulm);
      instance.SetNewArray(&newArray_Ulm);
      instance.SetDelete(&delete_Ulm);
      instance.SetDeleteArray(&deleteArray_Ulm);
      instance.SetDestructor(&destruct_Ulm);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Ulm*)
   {
      return GenerateInitInstanceLocal((::Ulm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Ulm*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Detector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Detector(void *p = 0);
   static void *newArray_Detector(Long_t size, void *p);
   static void delete_Detector(void *p);
   static void deleteArray_Detector(void *p);
   static void destruct_Detector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Detector*)
   {
      ::Detector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Detector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Detector", ::Detector::Class_Version(), "./Event.hh", 84,
                  typeid(::Detector), DefineBehavior(ptr, ptr),
                  &::Detector::Dictionary, isa_proxy, 4,
                  sizeof(::Detector) );
      instance.SetNew(&new_Detector);
      instance.SetNewArray(&newArray_Detector);
      instance.SetDelete(&delete_Detector);
      instance.SetDeleteArray(&deleteArray_Detector);
      instance.SetDestructor(&destruct_Detector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Detector*)
   {
      return GenerateInitInstanceLocal((::Detector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Detector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size, void *p);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "./Event.hh", 157,
                  typeid(::Event), DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, isa_proxy, 4,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      return GenerateInitInstanceLocal((::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Ulm::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Ulm::Class_Name()
{
   return "Ulm";
}

//______________________________________________________________________________
const char *Ulm::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ulm*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Ulm::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Ulm*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Ulm::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ulm*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Ulm::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Ulm*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Detector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Detector::Class_Name()
{
   return "Detector";
}

//______________________________________________________________________________
const char *Detector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Detector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Detector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Detector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Detector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Detector::Streamer(TBuffer &R__b)
{
   // Stream an object of class Detector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Detector::Class(),this);
   } else {
      R__b.WriteClassBuffer(Detector::Class(),this);
   }
}

//______________________________________________________________________________
void Detector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Detector.
      TClass *R__cl = ::Detector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventTime", &fEventTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorType", &fDetectorType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetectorNumber", &fDetectorNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawEnergy", &fRawEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdcHits", &fTdcHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdcHitsInWindow", &fTdcHitsInWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUlm", &fUlm);
      R__insp.InspectMember(fUlm, "fUlm.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Detector(void *p) {
      return  p ? new(p) ::Detector : new ::Detector;
   }
   static void *newArray_Detector(Long_t nElements, void *p) {
      return p ? new(p) ::Detector[nElements] : new ::Detector[nElements];
   }
   // Wrapper around operator delete
   static void delete_Detector(void *p) {
      delete ((::Detector*)p);
   }
   static void deleteArray_Detector(void *p) {
      delete [] ((::Detector*)p);
   }
   static void destruct_Detector(void *p) {
      typedef ::Detector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Detector

//______________________________________________________________________________
void Ulm::Streamer(TBuffer &R__b)
{
   // Stream an object of class Ulm.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Ulm::Class(),this);
   } else {
      R__b.WriteClassBuffer(Ulm::Class(),this);
   }
}

//______________________________________________________________________________
void Ulm::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Ulm.
      TClass *R__cl = ::Ulm::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCycleNumber", &fCycleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerMask", &fTriggerMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamStatus", &fBeamStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClock", &fClock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLiveClock", &fLiveClock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMasterCount", &fMasterCount);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Ulm(void *p) {
      return  p ? new(p) ::Ulm : new ::Ulm;
   }
   static void *newArray_Ulm(Long_t nElements, void *p) {
      return p ? new(p) ::Ulm[nElements] : new ::Ulm[nElements];
   }
   // Wrapper around operator delete
   static void delete_Ulm(void *p) {
      delete ((::Ulm*)p);
   }
   static void deleteArray_Ulm(void *p) {
      delete [] ((::Ulm*)p);
   }
   static void destruct_Ulm(void *p) {
      typedef ::Ulm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Ulm

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(Event::Class(),this);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Event.
      TClass *R__cl = ::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetector", (void*)&fDetector);
      R__insp.InspectMember("vector<Detector>", (void*)&fDetector, "fDetector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", (void*)&fMultiplicity);
      R__insp.InspectMember("map<uint8_t,int>", (void*)&fMultiplicity, "fMultiplicity.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? new(p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t nElements, void *p) {
      return p ? new(p) ::Event[nElements] : new ::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Event

namespace ROOT {
   void maplEunsignedsPcharcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPcharcOintgR_Dictionary();
   static void *new_maplEunsignedsPcharcOintgR(void *p = 0);
   static void *newArray_maplEunsignedsPcharcOintgR(Long_t size, void *p);
   static void delete_maplEunsignedsPcharcOintgR(void *p);
   static void deleteArray_maplEunsignedsPcharcOintgR(void *p);
   static void destruct_maplEunsignedsPcharcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned char,int>*)
   {
      map<unsigned char,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned char,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned char,int>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned char,int>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPcharcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned char,int>) );
      instance.SetNew(&new_maplEunsignedsPcharcOintgR);
      instance.SetNewArray(&newArray_maplEunsignedsPcharcOintgR);
      instance.SetDelete(&delete_maplEunsignedsPcharcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPcharcOintgR);
      instance.SetDestructor(&destruct_maplEunsignedsPcharcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned char,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned char,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPcharcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned char,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPcharcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned char,int> : new map<unsigned char,int>;
   }
   static void *newArray_maplEunsignedsPcharcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned char,int>[nElements] : new map<unsigned char,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPcharcOintgR(void *p) {
      delete ((map<unsigned char,int>*)p);
   }
   static void deleteArray_maplEunsignedsPcharcOintgR(void *p) {
      delete [] ((map<unsigned char,int>*)p);
   }
   static void destruct_maplEunsignedsPcharcOintgR(void *p) {
      typedef map<unsigned char,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned char,int>

namespace ROOT {
   void vectorlEDetectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDetectorgR_Dictionary();
   static void *new_vectorlEDetectorgR(void *p = 0);
   static void *newArray_vectorlEDetectorgR(Long_t size, void *p);
   static void delete_vectorlEDetectorgR(void *p);
   static void deleteArray_vectorlEDetectorgR(void *p);
   static void destruct_vectorlEDetectorgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Detector>*)
   {
      vector<Detector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Detector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Detector>", -2, "prec_stl/vector", 49,
                  typeid(vector<Detector>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDetectorgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Detector>) );
      instance.SetNew(&new_vectorlEDetectorgR);
      instance.SetNewArray(&newArray_vectorlEDetectorgR);
      instance.SetDelete(&delete_vectorlEDetectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDetectorgR);
      instance.SetDestructor(&destruct_vectorlEDetectorgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Detector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Detector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDetectorgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Detector>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDetectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Detector> : new vector<Detector>;
   }
   static void *newArray_vectorlEDetectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Detector>[nElements] : new vector<Detector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDetectorgR(void *p) {
      delete ((vector<Detector>*)p);
   }
   static void deleteArray_vectorlEDetectorgR(void *p) {
      delete [] ((vector<Detector>*)p);
   }
   static void destruct_vectorlEDetectorgR(void *p) {
      typedef vector<Detector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Detector>

/********************************************************
* EightPiUnpackerDictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEightPiUnpackerDictionary();

extern "C" void G__set_cpp_environmentEightPiUnpackerDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Event.hh");
  G__cpp_reset_tagtableEightPiUnpackerDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevEightPiUnpackerDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Ulm */
static int G__EightPiUnpackerDictionary_449_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ulm* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ulm[n];
     } else {
       p = new((void*) gvp) Ulm[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Ulm;
     } else {
       p = new((void*) gvp) Ulm;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->Header((uint16_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->Clock((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->ClockOverflow((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->LiveClock((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->MasterCount((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const Ulm*) G__getstructoffset())->CycleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const Ulm*) G__getstructoffset())->TriggerMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Ulm*) G__getstructoffset())->BeamStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Ulm*) G__getstructoffset())->Clock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Ulm*) G__getstructoffset())->LiveClock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Ulm*) G__getstructoffset())->MasterCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Ulm::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ulm::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Ulm::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Ulm::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Ulm*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ulm::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ulm::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Ulm::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_449_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Ulm::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EightPiUnpackerDictionary_449_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Ulm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Ulm(*(Ulm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Ulm G__TUlm;
static int G__EightPiUnpackerDictionary_449_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Ulm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Ulm*) (soff+(sizeof(Ulm)*i)))->~G__TUlm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Ulm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Ulm*) (soff))->~G__TUlm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EightPiUnpackerDictionary_449_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Ulm* dest = (Ulm*) G__getstructoffset();
   *dest = *(Ulm*) libp->para[0].ref;
   const Ulm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Detector */
static int G__EightPiUnpackerDictionary_450_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Detector(
(uint32_t) G__int(libp->para[0]), (uint32_t) G__int(libp->para[1])
, (uint8_t) G__int(libp->para[2]), *((pair<uint16_t,uint16_t>*) G__int(libp->para[3]))
, *((Ulm*) G__int(libp->para[4])));
   } else {
     p = new((void*) gvp) Detector(
(uint32_t) G__int(libp->para[0]), (uint32_t) G__int(libp->para[1])
, (uint8_t) G__int(libp->para[2]), *((pair<uint16_t,uint16_t>*) G__int(libp->para[3]))
, *((Ulm*) G__int(libp->para[4])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Detector[n];
     } else {
       p = new((void*) gvp) Detector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Detector;
     } else {
       p = new((void*) gvp) Detector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->TdcHits((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->Time((uint16_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->Energy((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Detector*) G__getstructoffset())->EventTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Detector*) G__getstructoffset())->EventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const Detector*) G__getstructoffset())->DetectorType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const Detector*) G__getstructoffset())->DetectorNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const Detector*) G__getstructoffset())->RawEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const Detector*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const Detector*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Detector*) G__getstructoffset())->TdcHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Detector*) G__getstructoffset())->TdcHitsInWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Ulm& obj = ((const Detector*) G__getstructoffset())->GetUlm();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Detector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Detector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Detector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Detector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Detector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Detector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_450_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Detector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EightPiUnpackerDictionary_450_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Detector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Detector(*(Detector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Detector G__TDetector;
static int G__EightPiUnpackerDictionary_450_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Detector*) (soff+(sizeof(Detector)*i)))->~G__TDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Detector*) (soff))->~G__TDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EightPiUnpackerDictionary_450_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Detector* dest = (Detector*) G__getstructoffset();
   *dest = *(Detector*) libp->para[0].ref;
   const Detector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__EightPiUnpackerDictionary_451_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Event(*(vector<Detector>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Event(*(vector<Detector>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event[n];
     } else {
       p = new((void*) gvp) Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event;
     } else {
       p = new((void*) gvp) Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((Event*) G__getstructoffset())->NofDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Detector* pobj;
         Detector xobj = ((Event*) G__getstructoffset())->GetDetector((size_t) G__int(libp->para[0]));
         pobj = new Detector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->Multiplicity(*(uint8_t*) G__UCharref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_451_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EightPiUnpackerDictionary_451_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Event(*(Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__EightPiUnpackerDictionary_451_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Event*) (soff+(sizeof(Event)*i)))->~G__TEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Event*) (soff))->~G__TEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EightPiUnpackerDictionary_451_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* dest = (Event*) G__getstructoffset();
   *dest = *(Event*) libp->para[0].ref;
   const Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Detector,allocator<Detector> > */
static int G__EightPiUnpackerDictionary_453_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >::reference obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->at((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::const_reference obj = ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->at((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->begin();
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->end();
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::reverse_iterator* pobj;
         vector<Detector,allocator<Detector> >::reverse_iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Detector,allocator<Detector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::reverse_iterator* pobj;
         vector<Detector,allocator<Detector> >::reverse_iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->rend();
         pobj = new vector<Detector,allocator<Detector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->resize((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->resize((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *((Detector*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >::reference obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator[]((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::const_reference obj = ((const vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator[]((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >[n];
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >;
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *(Detector*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]), *(Detector*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Detector,allocator<Detector> >((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Detector,allocator<Detector> >(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Detector,allocator<Detector> >(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Detector,allocator<Detector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Detector,allocator<Detector> >(*((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Detector,allocator<Detector> >(*((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Detector,allocator<Detector> >& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->operator=(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->reserve((vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Detector& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Detector& obj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->push_back(*(Detector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->swap(*(vector<Detector,allocator<Detector> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Detector,allocator<Detector> >::iterator* pobj;
         vector<Detector,allocator<Detector> >::iterator xobj = ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *(Detector*) libp->para[1].ref);
         pobj = new vector<Detector,allocator<Detector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Detector,allocator<Detector> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->insert(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), (vector<Detector,allocator<Detector> >::size_type) G__int(libp->para[1])
, *(Detector*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->erase(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->erase(*((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[0])), *((vector<Detector,allocator<Detector> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EightPiUnpackerDictionary_453_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Detector,allocator<Detector> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Detector,allocator<Detector> > G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR;
static int G__EightPiUnpackerDictionary_453_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Detector,allocator<Detector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Detector,allocator<Detector> >*) (soff+(sizeof(vector<Detector,allocator<Detector> >)*i)))->~G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Detector,allocator<Detector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Detector,allocator<Detector> >*) (soff))->~G__TvectorlEDetectorcOallocatorlEDetectorgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Ulm */

/* Detector */

/* Event */

/* vector<Detector,allocator<Detector> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEightPiUnpackerDictionary {
 public:
  G__Sizep2memfuncEightPiUnpackerDictionary(): p(&G__Sizep2memfuncEightPiUnpackerDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEightPiUnpackerDictionary::*p)();
};

size_t G__get_sizep2memfuncEightPiUnpackerDictionary()
{
  G__Sizep2memfuncEightPiUnpackerDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEightPiUnpackerDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm))) {
     Ulm *G__Lderived;
     G__Lderived=(Ulm*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm),G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector))) {
     Detector *G__Lderived;
     G__Lderived=(Detector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event))) {
     Event *G__Lderived;
     G__Lderived=(Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event),G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEightPiUnpackerDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint8_t",98,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint16_t",114,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint64_t",107,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<uint8_t,std::vector<bool> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,vector<bool,allocator<bool> >,less<unsigned char> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<uint16_t,uint16_t>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_pairlEunsignedsPshortcOunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<uint16_t,uint16_t> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<uint16_t,uint16_t> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned short,unsigned short> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<uint8_t,std::vector<std::pair<uint16_t,uint16_t> > >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<uint8_t,std::vector<pair<uint16_t,uint16_t> > >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > > >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > >,less<unsigned char> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<uint8_t,size_t>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,unsigned long>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,unsigned long,less<unsigned char> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Detector>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),256,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),1,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector),257,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<uint8_t,int>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,int>",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned char,int,less<unsigned char> >",117,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Ulm */
static void G__setup_memvarUlm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm));
   { Ulm *p; p=(Ulm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("uint16_t"),-1,4,"fCycleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("uint16_t"),-1,4,"fTriggerMask=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fBeamStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("uint64_t"),-1,4,"fClock=",0,"counts in 100ns steps");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"fLiveClock=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"fMasterCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Detector */
static void G__setup_memvarDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector));
   { Detector *p; p=(Detector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"fEventTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("uint8_t"),-1,4,"fDetectorType=",0,"0 = germanium, 1 = plastic, 2 = silicon, 3 = BaF2/LaBr3");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("uint16_t"),-1,4,"fDetectorNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("uint16_t"),-1,4,"fRawEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("uint16_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"fTdcHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"fTdcHitsInWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm),-1,-1,4,"fUlm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR),G__defined_typename("vector<Detector>"),-1,4,"fDetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR),G__defined_typename("map<uint8_t,int>"),-1,4,"fMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Detector,allocator<Detector> > */
static void G__setup_memvarvectorlEDetectorcOallocatorlEDetectorgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   { vector<Detector,allocator<Detector> > *p; p=(vector<Detector,allocator<Detector> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEightPiUnpackerDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncUlm(void) {
   /* Ulm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm));
   G__memfunc_setup("Ulm",302,G__EightPiUnpackerDictionary_449_0_1, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Header",585,G__EightPiUnpackerDictionary_449_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'uint16_t' 0 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clock",492,G__EightPiUnpackerDictionary_449_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - clock", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClockOverflow",1344,G__EightPiUnpackerDictionary_449_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - overflow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveClock",892,G__EightPiUnpackerDictionary_449_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - liveClock", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MasterCount",1141,G__EightPiUnpackerDictionary_449_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - masterCount", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CycleNumber",1113,G__EightPiUnpackerDictionary_449_0_7, 114, -1, G__defined_typename("uint16_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TriggerMask",1120,G__EightPiUnpackerDictionary_449_0_8, 114, -1, G__defined_typename("uint16_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamStatus",1017,G__EightPiUnpackerDictionary_449_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clock",492,G__EightPiUnpackerDictionary_449_0_10, 107, -1, G__defined_typename("uint64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveClock",892,G__EightPiUnpackerDictionary_449_0_11, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MasterCount",1141,G__EightPiUnpackerDictionary_449_0_12, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EightPiUnpackerDictionary_449_0_13, 85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Ulm::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EightPiUnpackerDictionary_449_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ulm::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EightPiUnpackerDictionary_449_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Ulm::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EightPiUnpackerDictionary_449_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Ulm::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EightPiUnpackerDictionary_449_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EightPiUnpackerDictionary_449_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ulm::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EightPiUnpackerDictionary_449_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ulm::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EightPiUnpackerDictionary_449_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Ulm::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EightPiUnpackerDictionary_449_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Ulm::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Ulm", 302, G__EightPiUnpackerDictionary_449_0_25, (int) ('i'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm), -1, 0, 1, 1, 1, 0, "u 'Ulm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Ulm", 428, G__EightPiUnpackerDictionary_449_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EightPiUnpackerDictionary_449_0_27, (int) ('u'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm), -1, 1, 1, 1, 1, 0, "u 'Ulm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDetector(void) {
   /* Detector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector));
   G__memfunc_setup("Detector",826,G__EightPiUnpackerDictionary_450_0_1, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 0, 5, 1, 1, 0, 
"h - 'uint32_t' 0 - eventTime h - 'uint32_t' 0 - eventNumber "
"b - 'uint8_t' 0 - detectorType u 'pair<unsigned short,unsigned short>' 'pair<uint16_t,uint16_t>' 0 - energy "
"u 'Ulm' - 0 - ulm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Detector",826,G__EightPiUnpackerDictionary_450_0_2, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TdcHits",691,G__EightPiUnpackerDictionary_450_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - tdcHits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__EightPiUnpackerDictionary_450_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'uint16_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__EightPiUnpackerDictionary_450_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventTime",913,G__EightPiUnpackerDictionary_450_0_6, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__EightPiUnpackerDictionary_450_0_7, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorType",1244,G__EightPiUnpackerDictionary_450_0_8, 98, -1, G__defined_typename("uint8_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorNumber",1443,G__EightPiUnpackerDictionary_450_0_9, 114, -1, G__defined_typename("uint16_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawEnergy",916,G__EightPiUnpackerDictionary_450_0_10, 114, -1, G__defined_typename("uint16_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__EightPiUnpackerDictionary_450_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__EightPiUnpackerDictionary_450_0_12, 114, -1, G__defined_typename("uint16_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TdcHits",691,G__EightPiUnpackerDictionary_450_0_13, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TdcHitsInWindow",1506,G__EightPiUnpackerDictionary_450_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUlm",590,G__EightPiUnpackerDictionary_450_0_15, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Ulm), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EightPiUnpackerDictionary_450_0_16, 85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Detector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EightPiUnpackerDictionary_450_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EightPiUnpackerDictionary_450_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Detector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EightPiUnpackerDictionary_450_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Detector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EightPiUnpackerDictionary_450_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EightPiUnpackerDictionary_450_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EightPiUnpackerDictionary_450_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Detector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EightPiUnpackerDictionary_450_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Detector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EightPiUnpackerDictionary_450_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Detector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Detector", 826, G__EightPiUnpackerDictionary_450_0_28, (int) ('i'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 0, 1, 1, 1, 0, "u 'Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Detector", 952, G__EightPiUnpackerDictionary_450_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EightPiUnpackerDictionary_450_0_30, (int) ('u'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 1, 1, 1, 1, 0, "u 'Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event));
   G__memfunc_setup("Event",514,G__EightPiUnpackerDictionary_451_0_1, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event), -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' 'vector<Detector>' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__EightPiUnpackerDictionary_451_0_2, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NofDetectors",1232,G__EightPiUnpackerDictionary_451_0_3, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__EightPiUnpackerDictionary_451_0_4, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiplicity",1289,G__EightPiUnpackerDictionary_451_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "b - 'uint8_t' 11 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EightPiUnpackerDictionary_451_0_6, 85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EightPiUnpackerDictionary_451_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EightPiUnpackerDictionary_451_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EightPiUnpackerDictionary_451_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EightPiUnpackerDictionary_451_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EightPiUnpackerDictionary_451_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EightPiUnpackerDictionary_451_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EightPiUnpackerDictionary_451_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EightPiUnpackerDictionary_451_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__EightPiUnpackerDictionary_451_0_18, (int) ('i'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__EightPiUnpackerDictionary_451_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EightPiUnpackerDictionary_451_0_20, (int) ('u'), G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Event), -1, 1, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEDetectorcOallocatorlEDetectorgRsPgR(void) {
   /* vector<Detector,allocator<Detector> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR));
   G__memfunc_setup("at",213,G__EightPiUnpackerDictionary_453_0_1, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__EightPiUnpackerDictionary_453_0_2, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__EightPiUnpackerDictionary_453_0_3, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__EightPiUnpackerDictionary_453_0_4, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__EightPiUnpackerDictionary_453_0_5, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<Detector,allocator<Detector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__EightPiUnpackerDictionary_453_0_6, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<Detector,allocator<Detector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__EightPiUnpackerDictionary_453_0_7, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__EightPiUnpackerDictionary_453_0_8, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__EightPiUnpackerDictionary_453_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__EightPiUnpackerDictionary_453_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Detector,allocator<Detector> >::size_type' 0 - sz u 'Detector' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__EightPiUnpackerDictionary_453_0_11, 107, -1, G__defined_typename("vector<Detector,allocator<Detector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__EightPiUnpackerDictionary_453_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__EightPiUnpackerDictionary_453_0_13, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__EightPiUnpackerDictionary_453_0_14, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), G__defined_typename("vector<Detector,allocator<Detector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__EightPiUnpackerDictionary_453_0_15, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__EightPiUnpackerDictionary_453_0_16, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n u 'Detector' - 11 'Detector()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__EightPiUnpackerDictionary_453_0_17, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Detector,allocator<Detector> >",3592,G__EightPiUnpackerDictionary_453_0_18, 105, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - first u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__EightPiUnpackerDictionary_453_0_19, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__EightPiUnpackerDictionary_453_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__EightPiUnpackerDictionary_453_0_21, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__EightPiUnpackerDictionary_453_0_22, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_Detector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__EightPiUnpackerDictionary_453_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__EightPiUnpackerDictionary_453_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__EightPiUnpackerDictionary_453_0_25, 117, G__get_linked_tagnum(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__EightPiUnpackerDictionary_453_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - first "
"u 'vector<Detector,allocator<Detector> >::iterator' 'vector<Detector,allocator<Detector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__EightPiUnpackerDictionary_453_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position k - 'vector<Detector,allocator<Detector> >::size_type' 0 - n "
"u 'Detector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__EightPiUnpackerDictionary_453_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__EightPiUnpackerDictionary_453_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Detector,allocator<Detector> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__EightPiUnpackerDictionary_453_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Detector,allocator<Detector> >::iterator' - 0 - first u 'vector<Detector,allocator<Detector> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__EightPiUnpackerDictionary_453_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Detector,allocator<Detector> >", 3718, G__EightPiUnpackerDictionary_453_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEightPiUnpackerDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEightPiUnpackerDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEightPiUnpackerDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EightPiUnpackerDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR = { "map<unsigned char,vector<bool,allocator<bool> >,less<unsigned char>,allocator<pair<const unsigned char,vector<bool,allocator<bool> > > > >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_pairlEunsignedsPshortcOunsignedsPshortgR = { "pair<unsigned short,unsigned short>" , 115 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR = { "vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR = { "map<unsigned char,vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > >,less<unsigned char>,allocator<pair<const unsigned char,vector<pair<unsigned short,unsigned short>,allocator<pair<unsigned short,unsigned short> > > > > >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR = { "map<unsigned char,unsigned long,less<unsigned char>,allocator<pair<const unsigned char,unsigned long> > >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_Ulm = { "Ulm" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_Detector = { "Detector" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_Event = { "Event" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR = { "vector<Detector,allocator<Detector> >" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator = { "vector<Detector,allocator<Detector> >::iterator" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Detector,allocator<Detector> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR = { "map<unsigned char,int,less<unsigned char>,allocator<pair<const unsigned char,int> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEightPiUnpackerDictionary() {
  G__EightPiUnpackerDictionaryLN_TClass.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_TBuffer.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_TObject.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_pairlEunsignedsPshortcOunsignedsPshortgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_Ulm.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_Detector.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_Event.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEightPiUnpackerDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_pairlEunsignedsPshortcOunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_vectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOvectorlEpairlEunsignedsPshortcOunsignedsPshortgRcOallocatorlEpairlEunsignedsPshortcOunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOunsignedsPlongcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOunsignedsPlonggRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_Ulm),sizeof(Ulm),-1,292096,(char*)NULL,G__setup_memvarUlm,G__setup_memfuncUlm);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_Detector),sizeof(Detector),-1,324864,(char*)NULL,G__setup_memvarDetector,G__setup_memfuncDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_Event),sizeof(Event),-1,324864,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgR),sizeof(vector<Detector,allocator<Detector> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEDetectorcOallocatorlEDetectorgRsPgR,G__setup_memfuncvectorlEDetectorcOallocatorlEDetectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_vectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_reverse_iteratorlEvectorlEDetectorcOallocatorlEDetectorgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EightPiUnpackerDictionaryLN_maplEunsignedsPcharcOintcOlesslEunsignedsPchargRcOallocatorlEpairlEconstsPunsignedsPcharcOintgRsPgRsPgR);
}
extern "C" void G__cpp_setupEightPiUnpackerDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupEightPiUnpackerDictionary()");
  G__set_cpp_environmentEightPiUnpackerDictionary();
  G__cpp_setup_tagtableEightPiUnpackerDictionary();

  G__cpp_setup_inheritanceEightPiUnpackerDictionary();

  G__cpp_setup_typetableEightPiUnpackerDictionary();

  G__cpp_setup_memvarEightPiUnpackerDictionary();

  G__cpp_setup_memfuncEightPiUnpackerDictionary();
  G__cpp_setup_globalEightPiUnpackerDictionary();
  G__cpp_setup_funcEightPiUnpackerDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEightPiUnpackerDictionary();
  return;
}
class G__cpp_setup_initEightPiUnpackerDictionary {
  public:
    G__cpp_setup_initEightPiUnpackerDictionary() { G__add_setup_func("EightPiUnpackerDictionary",(G__incsetup)(&G__cpp_setupEightPiUnpackerDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEightPiUnpackerDictionary() { G__remove_setup_func("EightPiUnpackerDictionary"); }
};
G__cpp_setup_initEightPiUnpackerDictionary G__cpp_setup_initializerEightPiUnpackerDictionary;

